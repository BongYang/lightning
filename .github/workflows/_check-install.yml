name: Reusable Check Installation

on:
  workflow_call:
    inputs:
      import-name:
        description: 'Import name to test with after installation'
        required: true
        type: string
      pypi-name:
        description: 'PyPI name to install the package with'
        required: true
        type: string


jobs:
  install:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # max-parallel: 6
      matrix:
        os: [ubuntu-20.04, macOS-10.15, windows-2019]
        python-version: [3.7, 3.9]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Prepare env
        run: |
          pip install "twine==3.2" setuptools wheel

      - name: Create package
        run: |
          python setup.py check --metadata --strict
          python setup.py sdist bdist_wheel

      - name: Check package
        run: |
          twine check dist/*
          python setup.py clean

      - name: Setup Windows
        if: runner.os == 'windows'
        run: |
          # this is just a hotfix because of Win cannot install it directly
          pip install -r requirements.txt --find-links https://download.pytorch.org/whl/cpu/torch_stable.html

      - name: Install | Uninstall package - archive
        run: |
          # install as archive
          pip install dist/*.tar.gz
          cd ..
          python -c "import ${{ inputs.import-name }}; print(${{ inputs.import-name }}.__version__)"
          pip uninstall -y ${{ inputs.pypi-name }}

      - name: Install | Uninstall package - wheel
        run: |
          # install as wheel
          pip install dist/*.whl
          cd ..
          python -c "import ${{ inputs.import-name }}; print(${{ inputs.import-name }}.__version__)"
          pip uninstall -y ${{ inputs.pypi-name }}
