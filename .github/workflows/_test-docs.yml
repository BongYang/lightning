name: Reusable test docs
# https://github.com/marketplace/actions/sphinx-build

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        default: '3.9'
        required: false
        type: string
      docs-dir:
        description: 'Working directory to run make docs in'
        default: './docs'
        required: false
        type: string
      timeout-minutes:
        description: 'timeout-minutes for each job'
        default: 15
        required: false
        type: number

jobs:
  doctest:
    runs-on: ubuntu-20.04
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}
      # Note: This uses an internal pip API and may not always work
      # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-td${{ env.TIME_PERIOD }}-${{ hashFiles('requirements/base.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-td${{ env.TIME_PERIOD }}-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake pandoc
          python -m pip install --upgrade --user pip
          pip --version
          pip install -q fire
          pip install -r requirements.txt --upgrade-strategy only-if-needed --find-links https://download.pytorch.org/whl/cpu/torch_stable.html --quiet
          pip install -r requirements/devel.txt
          pip install -r requirements/docs.txt
          pip list
        shell: bash

      - name: Test Documentation
        env:
          SPHINX_MOCK_REQUIREMENTS: 0
        working-directory: ${{ inputs.docs-dir }}
        run: |
          # First run the same pipeline as Read-The-Docs
          make doctest
          make coverage

  make-docs:
    runs-on: ubuntu-20.04
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          # lfs: true
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}

      # Note: This uses an internal pip API and may not always work
      # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/base.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake pandoc
          pip --version
          pip install --requirement requirements/docs.txt
          # install Texlive, see https://linuxconfig.org/how-to-install-latex-on-ubuntu-20-04-focal-fossa-linux
          sudo apt-get update && sudo apt-get install -y texlive-latex-extra dvipng texlive-pictures
          pip list
        shell: bash

      - name: Make Documentation
        working-directory: ${{ inputs.docs-dir }}
        run: |
          # First run the same pipeline as Read-The-Docs
          make html --debug --jobs $(nproc) SPHINXOPTS="-W --keep-going"

      - name: Upload built docs
        uses: actions/upload-artifact@v2
        with:
          name: docs-results-${{ github.sha }}
          path: docs/build/html/
        # Use always() to always run this step to publish test results when there are test failures
        if: success()
